<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="CAR_MANAGERDataSet" targetNamespace="http://tempuri.org/CAR_MANAGERDataSet.xsd" xmlns:mstns="http://tempuri.org/CAR_MANAGERDataSet.xsd" xmlns="http://tempuri.org/CAR_MANAGERDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CAR_MANAGERConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CAR_MANAGERConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Proyecto_Net_2.Properties.Settings.GlobalReference.Default.CAR_MANAGERConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="regionTableAdapter" GeneratorDataComponentClassName="regionTableAdapter" Name="region" UserDataComponentName="regionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CAR_MANAGERConnectionString (Settings)" DbObjectName="CAR_MANAGER.dbo.region" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[region] WHERE (([id_region] = @Original_id_region) AND ([Nmbre_region] = @Original_Nmbre_region) AND ([cod_region] = @Original_cod_region))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_region" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_region" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nmbre_region" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nmbre_region" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_cod_region" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cod_region" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[region] ([Nmbre_region], [cod_region]) VALUES (@Nmbre_region, @cod_region);
SELECT id_region, Nmbre_region, cod_region FROM region WHERE (id_region = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nmbre_region" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nmbre_region" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@cod_region" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cod_region" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_region, Nmbre_region, cod_region FROM dbo.region</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[region] SET [Nmbre_region] = @Nmbre_region, [cod_region] = @cod_region WHERE (([id_region] = @Original_id_region) AND ([Nmbre_region] = @Original_Nmbre_region) AND ([cod_region] = @Original_cod_region));
SELECT id_region, Nmbre_region, cod_region FROM region WHERE (id_region = @id_region)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Nmbre_region" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nmbre_region" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@cod_region" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cod_region" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_region" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_region" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Nmbre_region" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Nmbre_region" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_cod_region" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cod_region" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_region" ColumnName="id_region" DataSourceName="CAR_MANAGER.dbo.region" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_region" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_region" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_region" DataSetColumn="id_region" />
              <Mapping SourceColumn="Nmbre_region" DataSetColumn="Nmbre_region" />
              <Mapping SourceColumn="cod_region" DataSetColumn="cod_region" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="CAR_MANAGERDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="CAR_MANAGERDataSet" msprop:Generator_DataSetName="CAR_MANAGERDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="region" msprop:Generator_RowEvHandlerName="regionRowChangeEventHandler" msprop:Generator_RowDeletedName="regionRowDeleted" msprop:Generator_RowDeletingName="regionRowDeleting" msprop:Generator_RowEvArgName="regionRowChangeEvent" msprop:Generator_TablePropName="region" msprop:Generator_RowChangedName="regionRowChanged" msprop:Generator_RowChangingName="regionRowChanging" msprop:Generator_TableClassName="regionDataTable" msprop:Generator_RowClassName="regionRow" msprop:Generator_TableVarName="tableregion" msprop:Generator_UserTableName="region">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_region" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="id_region" msprop:Generator_ColumnPropNameInTable="id_regionColumn" msprop:Generator_ColumnVarNameInTable="columnid_region" msprop:Generator_UserColumnName="id_region" type="xs:int" />
              <xs:element name="Nmbre_region" msprop:Generator_ColumnPropNameInRow="Nmbre_region" msprop:Generator_ColumnPropNameInTable="Nmbre_regionColumn" msprop:Generator_ColumnVarNameInTable="columnNmbre_region" msprop:Generator_UserColumnName="Nmbre_region">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cod_region" msprop:Generator_ColumnPropNameInRow="cod_region" msprop:Generator_ColumnPropNameInTable="cod_regionColumn" msprop:Generator_ColumnVarNameInTable="columncod_region" msprop:Generator_UserColumnName="cod_region" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:region" />
      <xs:field xpath="mstns:id_region" />
    </xs:unique>
  </xs:element>
</xs:schema>